name: GH Actions CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  # Specific group naming so CI is only cancelled
  # within same PR or on merge to main
  group: ${{ github.ref }}-${{ github.head_ref }}-${{ github.workflow }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:
  main_tests:
    if: "github.repository == 'lilyminium/test_mda_pip_rtd'"
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
          os: [macOS-latest, ubuntu-latest, windows-latest]
          python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3

    - name: Build information
      run: |
        uname -a
        df -h
        ulimit -a


    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install testing dependencies
      # need non-login bash shell for Mac outside conda
      # otherwise it sources system Python
      shell: bash
      run: |
        python -m pip install -U pytest pytest-xdist pytest-cov codecov



    - name: Install package
      shell: bash
      run: |
        python --version
        python -m pip install .


    - name: Python information

      shell: bash

      run: |
        which python
        which pip
        pip list

    - name: Run tests

      shell: bash

      run: |
        pytest -n 4 -v --cov=test_mda_pip_rtd --cov-report=xml --color=yes test_mda_pip_rtd/tests/

    - name: codecov
      uses: codecov/codecov-action@v2
      with:
        file: coverage.xml
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
        verbose: True


  pylint_check:
    if: "github.repository == 'lilyminium/test_mda_pip_rtd'"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Install Pylint
      run: |
        which pip
        which python
        pip install pylint

    - name: Run Pylint
      env:
        PYLINTRC: .pylintrc
      run: |
        pylint test_mda_pip_rtd


  pypi_check:
    if: "github.repository == 'lilyminium/test_mda_pip_rtd'"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install setuptools cython numpy twine

    - name: Build package
      run: |
        python setup.py sdist

    - name: Check package build
      run: |
        DISTRIBUTION=$(ls -t1 dist/test_mda_pip_rtd-*.tar.gz | head -n 1)
        test -n "${DISTRIBUTION}" || { echo "no distribution dist/test_mda_pip_rtd-*.tar.gz found"; exit 1; }
        echo "twine check $DISTRIBUTION"
        twine check $DISTRIBUTION
  
  install_from_source_pip:
    if: "github.repository == 'lilyminium/test_mda_pip_rtd'"
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
          python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build from source
      run: |
        python --version
        pip install -e ".[test,doc]"

    - name: Check success
      run: |
        python -c "import MDAnalysis as mda; print(f'MDAnalysis version:', mda.__version__)"
        python -c "import test_mda_pip_rtd; print('test_mda_pip_rtd version:', test_mda_pip_rtd.__version__)"


